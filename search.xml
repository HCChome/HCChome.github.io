<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第二篇文章</title>
      <link href="/2023/01/09/2023%201-8%20%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/01/09/2023%201-8%20%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我第二篇文章"><a href="#这是我第二篇文章" class="headerlink" title="这是我第二篇文章"></a>这是我第二篇文章</h2>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建 Hexo 博客并部署到 GitHub Pages 的完整流程</title>
      <link href="/2023/01/08/2023%201-8%20%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/01/08/2023%201-8%20%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><p>在开始之前，请确保你已经安装好了：</p><ul><li><strong>Node.js</strong>（建议版本 18及以上）</li><li><strong>Git</strong></li></ul><p>如果尚未安装：</p><ul><li>Node.js 安装地址：<a href="https://nodejs.org/">https://nodejs.org/</a></li><li>Git 安装地址：<a href="https://git-scm.com/">https://git-scm.com/</a></li></ul><p>安装完成后，在终端中验证是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><h2 id="二、安装-Hexo"><a href="#二、安装-Hexo" class="headerlink" title="二、安装 Hexo"></a>二、安装 Hexo</h2><p>使用 npm 安装 Hexo 命令行工具：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完成后，可以使用以下命令验证：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h2 id="三、初始化博客项目"><a href="#三、初始化博客项目" class="headerlink" title="三、初始化博客项目"></a>三、初始化博客项目</h2><p>在一个你想放置博客的文件夹中打开终端，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>这样就会创建一个名为 blog 的 Hexo 项目文件夹，并安装所有依赖。</p><h2 id="四、本地预览博客"><a href="#四、本地预览博客" class="headerlink" title="四、本地预览博客"></a>四、本地预览博客</h2><p>使用以下命令启动本地服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>默认访问地址为： <a href="http://localhost:4000/">http://localhost:4000</a></p><h2 id="五、发布文章"><a href="#五、发布文章" class="headerlink" title="五、发布文章"></a>五、发布文章</h2><p>在 source&#x2F;_posts 文件夹下，新建 Markdown 文件或使用命令新建文章：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;文章标题&quot;</span></span><br></pre></td></tr></table></figure><p>编辑生成的 .md 文件，修改标题、日期和内容。</p><h2 id="六、选择并设置主题（可选）"><a href="#六、选择并设置主题（可选）" class="headerlink" title="六、选择并设置主题（可选）"></a>六、选择并设置主题（可选）</h2><p>你可以在 Hexo 主题库 中选择你喜欢的主题。</p><p>例如安装 butterfly 主题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/jerryc127/hexo-theme-butterfly themes/butterfly</span><br></pre></td></tr></table></figure><p>然后修改 _config.yml 中的 theme 字段为对应主题名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><h2 id="七、部署到-GitHub-Pages"><a href="#七、部署到-GitHub-Pages" class="headerlink" title="七、部署到 GitHub Pages"></a>七、部署到 GitHub Pages</h2><ol><li><p>创建 GitHub 仓库<br>登录 GitHub，创建一个新的仓库，命名为 yourname.github.io（替换为你的 GitHub 用户名）。</p></li><li><p>安装部署插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>修改 Hexo 配置文件 _config.yml，添加部署配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/yourname/yourname.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>注意：确保仓库的默认分支为 main，如果是 master，需要相应修改。</p></li><li><p>部署博客<br>每次写完文章后，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>博客就会部署到 GitHub Pages 上。<br>hexo clean<br>清理 Hexo 项目中的缓存和之前生成的静态文件，确保后续生成的文件是最新的，没有旧文件残留。<br>hexo generate（简写为 hexo g）<br>根据你的 Markdown 文章和配置文件，生成静态网页文件（HTML、CSS、JS 等），这些文件会被放到 public 文件夹中，准备部署。<br>hexo deploy（简写为 hexo d）<br>使用你在 _config.yml 中配置的部署方式（这里是 Git），将生成好的静态文件推送到你的 GitHub 仓库对应分支（比如 main），从而让 GitHub Pages 托管你的博客，实现线上访问。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
